#Использовать v8metadata-reader
#Использовать fs
#Использовать logos

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Нормализует пути, заменяя разделитель пути на тот, который используется на SQ
//
// Параметры:
//   Путь - Строка - любой путь на ФС
//   КакВЛинукс - Булево - Использовать разделитель пути как в линукс
//
//  Возвращаемое значение:
//   Строка - Нормализованный путь
//
Функция НормализованыйПуть(Путь, КакВЛинукс = Истина) Экспорт

	КонечныйПуть = "";

	Если КакВЛинукс Тогда
		КонечныйПуть =  СтрЗаменить(Путь, "\", "/");
	Иначе
		КонечныйПуть = СтрЗаменить(Путь, "/", "\");
	КонецЕсли;

	Возврат КонечныйПуть;

КонецФункции

// Нормализует пути, заменяя разделитель пути на тот, который используется на SQ
//
// Параметры:
//   Файл - Файл - Объект типа
//   КакВЛинукс - Булево - Использовать разделитель пути как в линукс
//
//  Возвращаемое значение:
//   Строка - Нормализованный путь
//
Функция НормализованныйПутьФайла(Файл, КакВЛинукс = Истина) Экспорт

	Возврат НормализованыйПуть(Файл.ПолноеИмя, КакВЛинукс);

КонецФункции

// Определяет путь на ФС по которому находится объект метаданных
//
// Параметры:
//   Генератор - v8metadata-reader.Путь1СПоМетаданным - Объект класса для поиска пути
//   ОбъектМетаданных - Строка - Представление объекта метаданных
//
//  Возвращаемое значение:
//   Строка - Путь к объекту конфигурации  на ФС
//
Функция ПутьКОбъектуКонфигурации(Генератор, ОбъектМетаданных) Экспорт

	Возврат Генератор.Путь(ОбъектМетаданных);

КонецФункции

// Возвращает нормализованный путь на ФС к объекту конфигурации
//
// Параметры:
//   Генератор - v8metadata-reader.Путь1СПоМетаданным - Объект класса для поиска пути
//   Объект - Строка - Представление объекта метаданных
//   КакВЛинукс - Булево - Использовать пути как в линукс
//
//  Возвращаемое значение:
//   Строка - Нормализованный путь к объекту конфигурации на ФС
//
Функция НормализованныйПутьКОбъектуКонфигурации(Генератор, Объект, КакВЛинукс = Истина) Экспорт

	Возврат НормализованыйПуть(ПутьКОбъектуКонфигурации(Генератор, Объект), КакВЛинукс);

КонецФункции

// Проверяет существует ли путь на ФС к модулю объекта конфигурации, если путь не существует
// ищет верхнеуровневые модули.
//
// Параметры:
//   Генератор - v8metadata-reader.Путь1СПоМетаданным - Объект класса для поиска пути
//   Объект - Строка - Представление объекта метаданных
//
//  Возвращаемое значение:
//   Строка - Путь к модулю объекта конфигурации либо к модулю переопределенного объекта
//
Функция ПодобратьМодуль(Генератор, Знач Объект) Экспорт

	ЛогПоиска = Логирование.ПолучитьЛог("oscript.app.cf_info");
	ЛогПоиска.УстановитьУровень(УровниЛога.Ошибка);
	
	Переопределение = "";
	Шаблон = "%1.%2";
	
	ТипыМодулей = Новый Массив;
	ТипыМодулей.Добавить(СтрШаблон(Шаблон, Объект, "Модуль"));
	ТипыМодулей.Добавить(СтрШаблон(Шаблон, Объект, "МодульОбъекта"));
	ТипыМодулей.Добавить(СтрШаблон(Шаблон, Объект, "МодульМенеджера"));
	ТипыМодулей.Добавить(СтрШаблон(Шаблон, Объект, "МодульНабораЗаписей"));
	ТипыМодулей.Добавить(СтрШаблон(Шаблон, Объект, "МодульКоманды"));
	ТипыМодулей.Добавить(СтрШаблон(Шаблон, Объект, "МодульМенеджераЗначения"));
	ТипыМодулей.Добавить(МодульПриложенияСтрокой());
	ТипыМодулей.Добавить(МодульОбычногоПриложенияСтрокой());
	ТипыМодулей.Добавить(МодульСеансаСтрокой());

	ЛогПоиска = Логирование.ПолучитьЛог("oscript.app.cf_info");
	ЛогПоиска.УстановитьУровень(УровниЛога.Отключить);

	Для Каждого ТипМодуля Из ТипыМодулей Цикл

		Если МожноИспользоватьВЗамечаниях(Генератор, ТипМодуля) Тогда
			Переопределение = ТипМодуля;
			Прервать;
		КонецЕсли;

	КонецЦикла;

	ЛогПоиска.УстановитьУровень(УровниЛога.Информация);

	ЛогПоиска.УстановитьУровень(УровниЛога.Информация);
	Возврат Переопределение;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция МодульПриложенияСтрокой()

	Возврат "Конфигурация.МодульУправляемогоПриложения";

КонецФункции

Функция МодульОбычногоПриложенияСтрокой()

	Возврат "Конфигурация.МодульОбычногоПриложения";

КонецФункции

Функция МодульСеансаСтрокой()

	Возврат "Конфигурация.МодульСеанса";

КонецФункции

Функция МожноИспользоватьВЗамечаниях(Знач Генератор, Знач Объект)

	Результат = Истина;

	Путь = НормализованныйПутьКОбъектуКонфигурации(Генератор, Объект);

	Если НЕ ЗначениеЗаполнено(Путь) ИЛИ НЕ ФС.ФайлСуществует(Путь) Тогда
		Результат = Ложь;
	КонецЕсли;

	Если Результат = Истина И ФайловыеОперации.ПустойФайл(Путь) Тогда
		Результат = Ложь;
	КонецЕсли;

	Возврат Результат;

КонецФункции

#КонецОбласти

Лог = ПараметрыПриложения.Лог();
